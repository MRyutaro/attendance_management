# Generated by Django 4.0.4 on 2023-06-12 17:38

import api.models
import datetime
from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('email', models.EmailField(error_messages={'unique': 'このメールアドレスは既に登録されています。'}, max_length=254, unique=True)),
                ('username', models.CharField(blank=True, help_text='150字以下の半角英数字で入力してください。', max_length=150, null=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()])),
                ('role', models.CharField(choices=[('owner', 'オーナー'), ('manager', 'マネージャー'), ('employee', '従業員')], default='employee', help_text='ユーザーの権限を設定します。            ownerは全ての権限を持ちます。            managerは従業員の管理ができます。            employeeは従業員の勤怠を入力できます。', max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'ユーザー',
                'verbose_name_plural': 'ユーザー',
                'db_table': 'api_user',
            },
            managers=[
                ('objects', api.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('email', models.CharField(max_length=30, unique=True)),
                ('name', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name': '会社',
                'verbose_name_plural': '会社',
            },
        ),
        migrations.CreateModel(
            name='WorkRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('work_date', models.DateField()),
                ('start_work_at', models.TimeField(blank=True, null=True)),
                ('finish_work_at', models.TimeField(blank=True, null=True)),
                ('start_break_at', models.TimeField(blank=True, null=True)),
                ('finish_break_at', models.TimeField(blank=True, null=True)),
                ('start_overwork_at', models.TimeField(blank=True, null=True)),
                ('finish_overwork_at', models.TimeField(blank=True, null=True)),
                ('workplace', models.CharField(choices=[('office', 'オフィス'), ('home', '在宅'), ('others', 'その他')], default='office', max_length=10)),
                ('work_contents', models.CharField(blank=True, max_length=50, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '勤怠記録',
                'verbose_name_plural': '勤怠記録',
            },
        ),
        migrations.CreateModel(
            name='PaidLeaveRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('paid_leave_date', models.DateField()),
                ('work_type', models.CharField(max_length=30)),
                ('paid_leave_reason', models.CharField(max_length=50)),
                ('status', models.CharField(choices=[('requested', 'リクエスト済み'), ('confirmed', '承認済み'), ('rejected', '拒否済み')], default='requested', max_length=10)),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('reject_reason', models.CharField(blank=True, max_length=50, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.company')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '有給休暇申請記録',
                'verbose_name_plural': '有給休暇申請記録',
            },
        ),
        migrations.CreateModel(
            name='PaidLeaveDay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('year', models.IntegerField(unique=True)),
                ('max_paid_leave_days', models.FloatField()),
                ('used_paid_leave_days', models.FloatField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '有給休暇日数',
                'verbose_name_plural': '有給休暇日数',
            },
        ),
        migrations.CreateModel(
            name='PaidLeave',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('work_type', models.CharField(choices=[('workday', '平日'), ('day_off', '休日'), ('holiday', '祝日'), ('all_day_leave', '全休'), ('morning_leave', '午前休'), ('afternoon_leave', '午後休')], default='workday', max_length=20)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.company')),
            ],
            options={
                'verbose_name': '有給休暇',
                'verbose_name_plural': '有給休暇',
            },
        ),
        migrations.CreateModel(
            name='Invitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('invitee_email', models.CharField(max_length=30)),
                ('token', models.CharField(max_length=30, unique=True)),
                ('expiration_date', models.DateTimeField(default=datetime.datetime(2023, 6, 13, 17, 38, 26, 553398, tzinfo=utc), help_text='招待URLの有効期限です。デフォルトは1日です。')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.company')),
                ('inviter', models.ForeignKey(help_text='招待した人のユーザーIDです。', on_delete=django.db.models.deletion.CASCADE, related_name='招待した人', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '招待',
                'verbose_name_plural': '招待',
            },
        ),
        migrations.CreateModel(
            name='Belonging',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.company')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '所属',
                'verbose_name_plural': '所属',
            },
        ),
        migrations.AddConstraint(
            model_name='workrecord',
            constraint=models.UniqueConstraint(fields=('user', 'work_date'), name='unique_work_record'),
        ),
        migrations.AddConstraint(
            model_name='paidleaverecord',
            constraint=models.UniqueConstraint(fields=('user', 'paid_leave_date'), name='unique_paid_leave_record'),
        ),
        migrations.AddConstraint(
            model_name='paidleaveday',
            constraint=models.UniqueConstraint(fields=('user', 'year'), name='unique_paid_leave_day'),
        ),
        migrations.AddConstraint(
            model_name='paidleave',
            constraint=models.UniqueConstraint(fields=('company', 'date'), name='unique_paid_leave'),
        ),
        migrations.AddConstraint(
            model_name='belonging',
            constraint=models.UniqueConstraint(fields=('user', 'company'), name='unique_user_company'),
        ),
    ]
